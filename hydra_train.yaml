name: hydra
image: mosaicml/pytorch:2.2.1_cu121-python3.11-ubuntu20.04
compute:
  cluster: r1z1
  gpus: 8
scheduling:
  resumable: false
  priority: medium
integrations:
- integration_type: wandb
  entity: mosaic-ml
  project: colm-hydra-decoding
- integration_type: apt_packages
  packages:
  - git-lfs
- integration_type: pip_packages
  packages:
  - oci-cli

command: 'source /secrets/secrets.env

  export AWS_PROFILE=data-force-one

  git clone git@github.com:zankner/axolotl.git

  cd axolotl

  pip install -e ".[flash-attn,deepspeed]"

  python split_stages.py --params-path /mnt/config/parameters.yaml

  git lfs install

  git clone https://huggingface.co/datasets/Aeala/ShareGPT_Vicuna_unfiltered

  accelerate launch -m axolotl.cli.train stage_1.yml

  accelerate launch -m axolotl.cli.train stage_2.yml

  python -m axolotl.cli.merge_lora stage_1.yml --lora_model_dir=ckpts/stage1

  python -m axolotl.cli.merge_lora stage_2.yml --lora_model_dir=ckpts/stage2

  huggingface-cli upload ankner/{STAGE_1_NAME} ckpts/stage1/merged . --private --token $HUGGING_FACE_HUB_TOKEN

  huggingface-cli upload ankner/{STAGE_2_NAME} ckpts/stage2/merged . --private --token $HUGGING_FACE_HUB_TOKEN

'

parameters:
  stage_1:
    base_model: lmsys/vicuna-7b-v1.5
    base_model_config: lmsys/vicuna-7b-v1.5
    model_type: LlamaForCausalLM
    tokenizer_type: LlamaTokenizer
    is_llama_derived_model: true

    seed: # Set in script 

    load_in_8bit: false
    load_in_4bit: true
    strict: false

    datasets:
      - path: ShareGPT_Vicuna_unfiltered/ShareGPT_V4.3_unfiltered_cleaned_split.json
        type: sharegpt
    dataset_prepared_path: /tmp/prepared-data
    val_set_size: 0.01
    output_dir: ./ckpts/stage1

    adapter: qlora
    lora_model_dir:

    lora_r: 32
    lora_alpha: 16
    lora_dropout: 0.05
    lora_target_modules: 
      - gate_proj
      - down_proj
      - up_proj
      - q_proj
      - v_proj
      - k_proj
      - o_proj
      - lm_head
    lora_target_linear: 
    lora_fan_in_fan_out:
    lora_modules_to_save:

    sequence_len: 4096
    sample_packing: true
    pad_to_sequence_len: true

    wandb_project: colm-hydra-decoding
    wandb_entity:
    wandb_watch:
    wandb_run_id:
    wandb_name: # Set in script
    wandb_log_model:

    gradient_accumulation_steps: # Set in script
    micro_batch_size: # Set in script
    num_epochs: 2
    optimizer: adamw_bnb_8bit
    lr_scheduler: cosine
    learning_rate: 0.0005

    train_on_inputs: false
    group_by_length: false
    bf16: true
    fp16: false
    tf32: false

    gradient_checkpointing: true
    early_stopping_patience:
    resume_from_checkpoint:
    local_rank:
    logging_steps: 1
    xformers_attention:
    flash_attention: true

    warmup_steps: 40
    eval_steps: 40
    save_steps:
    save_total_limit: 1
    debug:
    deepspeed:
    weight_decay: 0.0
    fsdp:
    fsdp_config:
    special_tokens:
      bos_token: "<s>"
      eos_token: "</s>"
      unk_token: "<unk>"

    grounded_heads: # Set in script
    hydra_head_arch: # Set in script
    hydra_num_heads: # Set in script
    hydra_num_layers: 1
    hydra_heads_coefficient: 1.0
    hydra_decay_coefficient: 0.65
    hydra_logging: true
    hydra_scheduler: constant
    hydra_lr_multiplier: 1.0
    hydra_self_distillation: true
    hydra_only_heads: true
    ddp_find_unused_parameters: true
    # Stage 1: only train the hydra heads
    # Stage 2: train the whole model
  stage_2:
    base_model: lmsys/vicuna-7b-v1.5
    base_model_config: lmsys/vicuna-7b-v1.5
    model_type: LlamaForCausalLM
    tokenizer_type: LlamaTokenizer
    is_llama_derived_model: true

    seed: # Set in script 

    load_in_8bit: false
    load_in_4bit: true
    strict: false

    datasets:
      - path: ShareGPT_Vicuna_unfiltered/ShareGPT_V4.3_unfiltered_cleaned_split.json
        type: sharegpt
    dataset_prepared_path: /tmp/prepared-data
    val_set_size: 0.01
    output_dir: ./ckpts/stage2

    adapter: qlora
    lora_model_dir: ./ckpts/stage1

    lora_r: 32
    lora_alpha: 16
    lora_dropout: 0.05
    lora_target_modules: 
      - gate_proj
      - down_proj
      - up_proj
      - q_proj
      - v_proj
      - k_proj
      - o_proj
      - lm_head
    lora_target_linear: 
    lora_fan_in_fan_out:
    lora_modules_to_save:

    sequence_len: 4096
    sample_packing: true
    pad_to_sequence_len: true

    wandb_project: colm-hydra-decoding
    wandb_entity:
    wandb_watch:
    wandb_run_id:
    wandb_name: # Set in script
    wandb_log_model:

    gradient_accumulation_steps: # Set in script
    micro_batch_size: # Set in script
    num_epochs: 2
    optimizer: adamw_bnb_8bit
    lr_scheduler: cosine
    learning_rate: 0.0005

    train_on_inputs: false
    group_by_length: false
    bf16: true
    fp16: false
    tf32: false

    gradient_checkpointing: true
    early_stopping_patience:
    resume_from_checkpoint:
    local_rank:
    logging_steps: 1
    xformers_attention:
    flash_attention: true

    warmup_steps: 40
    eval_steps: 40
    save_steps:
    save_total_limit: 1
    debug:
    deepspeed:
    weight_decay: 0.0
    fsdp:
    fsdp_config:
    special_tokens:
      bos_token: "<s>"
      eos_token: "</s>"
      unk_token: "<unk>"

    grounded_heads: # Set in script
    hydra_head_arch: # Set in script
    hydra_num_heads: # Set in script
    hydra_num_layers: 1
    hydra_heads_coefficient: 0.05
    hydra_decay_coefficient: 0.65
    hydra_logging: true
    hydra_scheduler: constant
    hydra_lr_multiplier: 1.0
    hydra_self_distillation: # Set in script
    # hydra_lr_multiplier: 4.0
    # hydra_only_heads: false
    # ddp_find_unused_parameters: true
    # Stage 1: only train the hydra heads
    # Stage 2: train the whole model
